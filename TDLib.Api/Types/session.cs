using System;
using Newtonsoft.Json;

namespace TD {

    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class Session : Structure
    {

        public partial class session : Session
        {

                [JsonProperty("@type")]
                public override string Type { get; set; } = "session";

                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                [JsonConverter(typeof(Converter))]
                [JsonProperty("id")]
                public string id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_current")]
                public bool? is_current_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("api_id")]
                public int? api_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("application_name")]
                public string application_name_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("application_version")]
                public string application_version_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_official_application")]
                public bool? is_official_application_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("device_model")]
                public string device_model_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("platform")]
                public string platform_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("system_version")]
                public string system_version_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("log_in_date")]
                public int? log_in_date_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("last_active_date")]
                public int? last_active_date_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("ip")]
                public string ip_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("country")]
                public string country_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("region")]
                public string region_;

        }

    }

}
