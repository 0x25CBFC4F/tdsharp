using System;
using Newtonsoft.Json;

namespace TD {

    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class Chat : Structure
    {

        public partial class chat : Chat
        {

                [JsonProperty("@type")]
                public override string Type { get; set; } = "chat";

                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                [JsonConverter(typeof(Converter))]
                [JsonProperty("id")]
                public long id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("type")]
                public ChatType type_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("title")]
                public string title_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("photo")]
                public ChatPhoto.chatPhoto photo_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("last_message")]
                public Message.message last_message_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("order")]
                public string order_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_pinned")]
                public bool is_pinned_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("unread_count")]
                public int unread_count_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("last_read_inbox_message_id")]
                public long last_read_inbox_message_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("last_read_outbox_message_id")]
                public long last_read_outbox_message_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("unread_mention_count")]
                public int unread_mention_count_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("notification_settings")]
                public NotificationSettings.notificationSettings notification_settings_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("reply_markup_message_id")]
                public long reply_markup_message_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("draft_message")]
                public DraftMessage.draftMessage draft_message_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("client_data")]
                public string client_data_;

        }

    }

}
