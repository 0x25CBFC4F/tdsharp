using System;
using Newtonsoft.Json;

namespace TD {

    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class Invoice : Structure
    {

        public partial class invoice : Invoice
        {

                [JsonProperty("@type")]
                public override string Type { get; set; } = "invoice";

                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                [JsonConverter(typeof(Converter))]
                [JsonProperty("currency")]
                public string currency_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("price_parts")]
                public LabeledPricePart.labeledPricePart[] price_parts_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_test")]
                public bool is_test_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("need_name")]
                public bool need_name_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("need_phone_number")]
                public bool need_phone_number_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("need_email_address")]
                public bool need_email_address_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("need_shipping_address")]
                public bool need_shipping_address_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("send_phone_number_to_provider")]
                public bool send_phone_number_to_provider_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("send_email_address_to_provider")]
                public bool send_email_address_to_provider_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_flexible")]
                public bool is_flexible_;

        }

    }

}
