using System;
using Newtonsoft.Json;

namespace TD {

    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class Message : Structure
    {

        public partial class message : Message
        {

                [JsonProperty("@type")]
                public override string Type { get; set; } = "message";

                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                [JsonConverter(typeof(Converter))]
                [JsonProperty("id")]
                public long id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("sender_user_id")]
                public int sender_user_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("chat_id")]
                public long chat_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("sending_state")]
                public MessageSendingState sending_state_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_outgoing")]
                public bool is_outgoing_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("can_be_edited")]
                public bool can_be_edited_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("can_be_forwarded")]
                public bool can_be_forwarded_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("can_be_deleted_only_for_self")]
                public bool can_be_deleted_only_for_self_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("can_be_deleted_for_all_users")]
                public bool can_be_deleted_for_all_users_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_channel_post")]
                public bool is_channel_post_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("contains_unread_mention")]
                public bool contains_unread_mention_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("date")]
                public int date_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("edit_date")]
                public int edit_date_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("forward_info")]
                public MessageForwardInfo forward_info_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("reply_to_message_id")]
                public long reply_to_message_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("ttl")]
                public int ttl_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("ttl_expires_in")]
                public double? ttl_expires_in_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("via_bot_user_id")]
                public int via_bot_user_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("author_signature")]
                public string author_signature_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("views")]
                public int views_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("media_album_id")]
                public string media_album_id_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("content")]
                public MessageContent content_;

                [JsonConverter(typeof(Converter))]
                [JsonProperty("reply_markup")]
                public ReplyMarkup reply_markup_;

        }

    }

}
