using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Declines pending join request in a chat
        /// </summary>
        public class DeclineChatJoinRequest : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "declineChatJoinRequest";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the user, which request will be declined
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("user_id")]
            public long UserId { get; set; }
        }

        /// <summary>
        /// Declines pending join request in a chat
        /// </summary>
        public static Task<Ok> DeclineChatJoinRequestAsync(
            this Client client, long chatId = default, long userId = default)
        {
            return client.ExecuteAsync(new DeclineChatJoinRequest
            {
                ChatId = chatId, UserId = userId
            });
        }
    }
}